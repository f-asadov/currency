version: '3.8'

services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs_app1
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USER: nest_user
      DATABASE_PASSWORD: nest_password
      DATABASE_NAME: currency_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    command: sh -c "npm i && npm run typeorm:generate && npm run build && npm run typeorm:run && npm run start"


  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs_app2
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USER: nest_user
      DATABASE_PASSWORD: nest_password
      DATABASE_NAME: currency_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  app3:
    build:
      context: . 
      dockerfile: Dockerfile
    container_name: nestjs_app3
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USER: nest_user
      DATABASE_PASSWORD: nest_password
      DATABASE_NAME: currency_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3002:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  app4:
    build:
      context: . 
      dockerfile: Dockerfile
    container_name: nestjs_app4
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USER: nest_user
      DATABASE_PASSWORD: nest_password
      DATABASE_NAME: currency_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3003:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  app5:
    build:
      context: . 
      dockerfile: Dockerfile
    container_name: nestjs_app5
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USER: nest_user
      DATABASE_PASSWORD: nest_password
      DATABASE_NAME: currency_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3004:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: currency_db
      MYSQL_USER: nest_user
      MYSQL_PASSWORD: nest_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "90:80"
    depends_on:
      - app1
      - app2
      - app3
      - app4
      - app5
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
